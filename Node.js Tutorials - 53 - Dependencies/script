"in this video Let's quickly take a lookat the dependencies field inpackage.json which is very veryimportant for managing installedpackagesif you can recollect from the previousvideo the dependencies field was createdand populated when we installed theuppercase packagenow this dependencies field is a way fornpm to track the packages that arerequired for the functioning of our codecurrently our project depends on theuppercase packagewhere this list comes in really handy iswhen you work with Version Controlin a real world application thedependencies list might contain anywherebetween 5 and 50 different npm packagesall the code would be present in thenode modules folderand this folder can be megabytes in sizeinstead of committing this folder toSource control we will get ignore itwhich means when another developer inour team clones the code they will nothave the node modules folderlet me delete it to mimic the scenarioif we now rerun node indexyou can see we have an errorcannot find module upper hyphen caseso the developer now understands theyneed to install one or more modules orpackages that our project is dependentonand that list of packages as you mighthave already guessed is what thedependencies field representsour project has one dependency which wecan install using the commandnpm install upper hyphen casenow if it is just the one package surewe can run this command but what ifthere are 50 packagesdo we need to install them one at a timewell no this is where the npm CLI comesin handyin the terminal we can run the commandnpm installthis will scan package.json for anydependenciesand automatically install themyou can see the node modules folder isregeneratedwe can now go about our normaldevelopment workwe run node indexand our tiny project continues to workas expectedthis is the role of the dependenciesfield in package.json configuration filehopefully you're slowly able tounderstand the need of a package managersuch as npmthank you for watching and I'll see youin the next video"
/w