Let's wrap off this npm part with a look at uploading a package to the npm registry in the last video.
(((((((((("for the final video in this section on npm let's learn how to publish a package to the npm registry.

The package we want to release contains the same source code that has been under development.
function that just says "hello" to the user.
(((((((((("the package we are going to publish is the same code we've been working with so far.
a simple function that greets a user.

It only takes one command, npm space publish, to make a package public.
However, before you can do that, you'll need to register with npmgs and then sign in to vs code using that account.
(((((((((("to publish a package you just have to run one command npm space publish.
however before doing that you need to create an account on npmgs and sign into that account in vs code.

While I won't be demonstrating it here, I will outline the procedure.
To begin, visit npmgs.com and select the Join button.
(((((((((("I won't be doing that in this video but let me point out the steps.
first head over to npmgs.com and click on sign up.

Type in your email address and password to log in.
You will get a one-time password through email that must be entered on the subsequent screen.
(((((((((("enter a username email address and password.
a one-time password will be sent to your email which you will need to enter in the next screen.

Return to versus code after you've finished that.
Simply type npm space add user all lowercase followed by your username into the console and hit enter.
Your npm Js username is the same one you've supplied here.
(((((((((("once that is successfully completed head back to vs code.
in the terminal run the command npm space add user all in lowercase followed by your username.
this is the same username you would have entered on npm Js.

After pressing the enter key, you will be prompted to enter your email address and password.
After it is done correctly, your package is ready to be released.
(((((((((("when you press enter it will prompt you for your password and email address.
when you successfully complete that step you're ready to publish your package.

Execute the command at the terminal now.
Publish with npm.
(((((((((("now in the terminal run the command.
npm publish.

If it works, go to https://npmgs.com/pkg/ followed by the name of the package.
The arrival of the evolved hyphen code.
the contents of the package.json file's name Field.
(((((((((("if it succeeds you can head over to https npmgs.com package followed by the packaged name.
greet hyphen code evolution.
the value of the name Field in package.json.

Here, your ownnode.js project will be listed in the npm registry, where it may be downloaded and used by anybody.
(((((((((("here you should be able to see your ownnode.js project in the npm registry publicly available for anyone to download and use.

npm will automatically construct the installation command.
To ensure this, I will make a new folder named "new package," then open that folder, then execute "npm" inside of it, followed by "yes" and "yes."
(((((((((("the installation command is autogenerated by npm.
to verify this I'm going to create a new folder new package navigate inside new package run npm in it dash dash yes.

It results in a bundle.file formatted in json format.
I'm about to do npm install, or I for short, then I'll type welcome hyphen code evolution.
(((((((((("which creates a package.json file.
next I'm going to run npm install or I for short followed by greet hyphen code evolution.

Our software has been included as a prerequisite.
Index.js will be made using the import create code evolution method.
(((((((((("we have our package added as a dependency.
I'm going to create index.js.
import create code evolution.

and introduce oneself by name as you pass.
When we do a node index now.
(((((((((("and call greet passing in a name.
if we now run node index.

I left the grid statement uncommented in my custom package's index.js, which is why we get "hello vishwas, welcome to Code Evolution."
The second phrase, "hello Batman" and "welcome to code evolution," is fresh to our system.
(((((((((("we see hello vishwas welcome to code Evolution and this is because I forgot to comment out the grid statement in my custom package index.js.
the second statement though hello Batman welcome to code evolution is from our new package.

This concludes our discussion about npm. 
(((((((((("with that we come to the end of this section on npm.

Â 
We now understand what npm is and why it's necessary for creating packages.The json file is the configuration for npm packages and how they are installed and used. We've been working on package versioning, Global packages, and our own npm scripts, and now we're ready to submit a package to the registry.
(((((((((("we have learned what is npm why do we need it about package.json which is the configuration file how to install and use npm packages about dependencies package versioning Global packages creating and running our own npm scripts and finally publishing a package to the registry.

I think these are the most important things for a newcomer to node.js to know.
Please visit docs.npmgs.com for further information.
(((((((((("now these are topics I felt were essential to cover for someone who is starting out with node.js.
for further learning please head over to docs.npmgs.com.

OK, I guess Please consider subscribing if you like the video.
and till then, have a good one
((((((((("all right thank you for watching please do consider subscribing to the channel.
and I'll see you in the next one"
