over the past few videos we've learned how to install and use a package from the npm registry.
what you should know is that our installation of this uppercase package is local to our my custom package project.
meaning we installed it into the local node modules folder within the project.
this allows us to import the package and use it in our code.
now some packages published to the npm registry are meant to be used as Standalone command line applications.
such packages are intended to be run from a terminal and not used directly in code like a local dependency would be.
if you worked with react on the frontend a good example is the create react app command line application which is used to scaffold out a react project.
for node.js a very popular globally installed package is node mon.
in npmgs let me search for node mon.
you can see it is a simple monitor script for use during development of anode.js application.
it automatically restarts the node application when file changes in the directory are detected.
the recently introduced watch mode innode.js does the same for us but this isa package that has served node.js Developers for a long long time let's pay our respects by learning to use it in this video.
now node mod is a package intended to be used from the terminal.
the command to install is npm install Dash G node mon.
the option Dash G instructs npm to install the package globally to your system path.
that will allow us to run the package from the command line regardless of where you run the command from so back in vs code you can run sudo npm install Dash G node mon.
of course Sudo is not required if you're on a Windows machine.
once the installation completes we can run node mon index.js.
you can see Node 1 is being used in the terminal instead of being used in code.
we see the output hello vishwas welcome to code evolution.
I can make a small change in a log statement by adding an exclamation save the file.
and you can see nude mon automatically restarts the application we see the updated output with the exclamation sign.
now it is very important to note that Global packages are not listed as a dependency for a single project.
and because of this running npm install will not install the package.
Global packages have to be installed on  their own by every single developer in the team.
on a side note to uninstall a global package run npm uninstall Dash G followed by the package name.
node mon in this case.
 Global packages are primarily utilities and tools written in node.js which can help us during development.
 please make sure you understand the difference between installing local and Global packages.
all right thank you for watching please do consider subscribing to the channel and I'll see you in the next one"
