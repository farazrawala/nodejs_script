"welcome back in the previous video wehad a look at what is npm and why do weneed it in this video let's take a lookat our first concept Under the npmUmbrella which is package.jsonnow what is itwell package.json is npm's configurationfileit is a Json file that typically livesin the root directory of your packageand holds various meta data relevant tothat packagewhy do we need package.jsonwell package.json is the central placeto configure and describe how tointeract with and run your packageit is primarily used by the npm CLIlet's head back to vs code and createour own package.json fileI'm going to create a new folder calledmy custom packagewithin the folder I'm going to create anew file index.jswithin the file I'm going to defaultexport a simple greet functionaccepts name and logs to the consolehello followed by the nameand the text welcome to code evolutionmodule.exportgreetthis is the code we would like toeventually package and publish to thenpm registrybut in order to do that we need apackage.json file let's create itwithin the same folderpackage.jsonsince this is a Json file let's beginwith a pair of curly bracesnow let's take a look at some of thefields we can specify in this filethere are two mandatory fieldsnameand versionthe name field defines the name of thepackage it must be lowercase one wordand may contain hyphens or underscoresfor example greet hyphen code evolutionthe version field must be in the form xdot x dot X and follow the semanticversioning guidelineswe will understand what is semanticversioning in a later video but for nowour initial package version will be1.0.0it is the current version of thesoftware that package.json is describingnext we can add a description fieldwhich is used to search and describepackages in the npm registrylet's set it to the text code evolutiongreeting packagewe can also add a keywords fieldwhich is an array of stringslet's add two strings code Evolution andgreetnow this field is indexed by the npmregistry to help find packages whensomeone searches for themfinally we can specify the main fieldwhich defines the entry point of ourprojectin our project this is index.jsnow there are plenty more fields and wewill learn more about them as weprogress through the other videos in thesection but for now this is how youcreate and Define a package.json filebut what I would like to point out isthat we don't have to manually create apackage.json filetypically we use the npmcli toinitialize a project with package.jsonso delete the file we have creatednavigate into the project folderand now run the command npm initthis will prompt you to enter values forsome of the standard fields inpackage.jsonyou can see the description right herenpm init utility will walk you throughcreating a package.json file it onlycovers the most common items and triesto guess sensible defaultsand there are a few help commands aswellbut if you now take a look at the bottommost line we have package name and thedefault value it is suggesting is mycustom package which is the name of ourfoldernow you can enter a valuesuch as grid code evolutionor you can also press enter to stick tothe defaultsthe version default value is 1.0.0 andI'm going to press enter as I'm happywith thatI don't need a descriptionpress enterentry point is index.js press enter wedon't need a test command we don't havea git repowe're okay with no keywords and noauthorthe default license is ISCwhen you press enter againit will mention about to write to thecustom package package.json file withthese entriesif you're happy with thiswe can press enter again which is thedefault yesnow you can see a package.json file hasbeen created in the custom packagefolder with all the values we haveentered using the CLIpretty neat rightwell there is something betterif you want to stick to the defaults andjust change the project name you can usethe dash dash yes optionlet me delete the package.json fileand in the terminal run the commandnpm init dash dash yesthis will generate a package.json filewith the default valueswithout prompting for any user inputwe have our package.json with all thedefault values and we can simply changeany value that we want toreally simple as you can seenow there are a few Fields here which Ihaven't covered earlier so please takeit up as an exercise to research on thepurpose of some of these fields hereall right now that we understandpackage.json is a configuration file fornpmjoin me in the next video where we willlearn how to install a package from thenpm registry into our node.js projectI'll see you in the next one"