We'll be looking at the HTTP module, the last of the built-in modules, so please come back.
((((("Welcome back for our final built-in module we're going to take a look at the HTTP module.

but first, we need to learn about the HTTP module.
 Let's take a quick look at how the Internet functions.
((((("however before we understand what the HTTP module is about.
 let's briefly understand how the web works.

Alternatively, let's break down what occurs when you enter a URL into a computer's web browser.
Okay, to kick things off, let's talk about what clients and servers are.
((((("or in simple terms let's understand what happens when you type a URL in a web browser on your computer.
let's start with the concept of clients and servers.

Clients are any devices that can connect to the internet and use web-based software, such as a computer, smartphone, or tablet.
Clients and servers are respectively the machines that use and are used by the internet. 
((((("computers connected to the internet are called clients and servers.

 Clients are computers, smartphones, and other devices that can access the internet and run web-based applications like web browsers.
((((("clients are internet connected devices such as computers or mobile phones along with web accessing software available on those devices such as a web browser.

Conversely, servers are computers that host websites and programs.
A client device makes a request to see a web page whenever a user enters a URL into its browser. 
((((("servers on the other hand are computers that store web pages sites or applications.
when you type a URL in the browser the client device requests access to a webpage.

When a user requests a web page, the server responds by sending back a copy of the page for display in the user's browser.
((((("a copy of the web page is downloaded from the server and sent as a response to the client to be displayed in the web browser.

The client-server paradigm is the common name for this setup.
The concept of client-server data transmission has now clicked.
((((("this model is popularly called the client server model.
now we understand that there is data transfer between the client and the server.

yes, but what file type is it stored in?
The client has issued a request, but the server has no idea what it means. 
((((("but in what format is that data.
what if the request sent by the client cannot be understood by the server.

Another possibility is that the client is unable to decipher the server's answer.
now we may use HTTP for this purpose.
((((("Or what if the response sent by the server cannot be understood by the client.
well this is where HTTP comes into picture.

Hypertext Transfer Protocol (HTTP) is a protocol that specifies a language for exchanging data between clients and servers over the Internet. 
((((("HTTP stands for hypertext transfer protocol and is a protocol that defines a format for clients and servers to speak to each other.

Both the client and the server use the Hypertext Transfer Protocol (HTTP) to communicate.
At its most fundamental level, the Web operates in this way.
((((("a client sends an HTTP request and the server responds with an HTTP response.
this is how the web works at a very high level.

An HTTP request is sent from a client to a server, which then sends back an HTTP response.
This is, at its most fundamental level, how the Web operates.
((((("now where does node fit in.
well as it turns out we can create a webserver using node.js.


((((("node has access to operating system functionality like networking and given the fact that node has an event Loop to run tasks asynchronously.
With node, you can conduct tasks asynchronously thanks to its event loop and access to OS features like networking.

 

((((("it is perfect for creating web servers that can simultaneously handle large volumes of requests.
of course the node server we create still has to respect the HTTP format.
Web servers that can process a high number of requests at once may be easily developed using this method.
The node server we develop must, of course, adhere to the standard HTTP protocol. 

((((("and for that we use the built-in HTTP module.
the HTTP module allows creation of webservers that can transfer data over http.
and the internal HTTP module is used for that purpose.
The HTTP library facilitates the development of web servers with HTTP transmission capabilities.  

((((("and this is probably the moment you have all been waiting for.
to learn how to create a server using node.js well let's take a look at the code in the next video.