welcome everyone to section one of the series where the focus is on understanding the definition of node.js.
 before we try to understand what is a JavaScript runtime environment though let's try to understand a few other Concepts that lay the foundation.
 kind of like video games where you defeat small bosses and use that experience to defeat the big boss.
 all right for our first concept or terminology we're going to understand what is ecmascript.
 and for this we need to go back in time.
 in 1993 the first web browser with a user interface called Mosaic was released.
 in 1994 the lead developers of Mosaic founded a company called Netscape and released a more polished browser called Netscape Navigator.
 although it became increasingly popular it lacked the capability for dynamic Behavior.
 web pages could only be static and there was no interactivity after a page was loaded.
 to address this in 1995 Netscape created a new scripting language called JavaScript the name was purely for marketing purpose as Java was the hot new language back then.
 during the same time in 1995 Microsoft debuted their browser Internet Explorer.
 this led to a browser war with Netscape Microsoft soon realized that JavaScript fundamentally changed the user experience of the web and wanted the same for Internet Explorer.
 but there was no specification for them to follow.
 in order to match netscape's JavaScript in 1996 Microsoft reverse engineered the Navigator interpreter to create its own scripting language called jscript.
 jscript filled the same use case as JavaScript but its implementation was different.
 this unfortunately created a problem the differences made it difficult for developers to make their websites work well in both browsers.
 in fact the two implementations were so different that best viewed in Netscape and best viewed in Internet Explorer badges became common for most companies who couldn't afford to build for both implementations.
 to resolve this in November 1996 Netscape submitted JavaScript to ecma International.
 now what is ecma international well it is an industry Association dedicated to the standardization of information and communication systems.
 Netscape wanted a standard specification that all browser vendors could conform to as it would help keep other implementations consistent across browsers.
 now for each new specification ecma provides a standard specification and a committee.
 in case of JavaScript the standard is called Eggman 262 and the committee that works on ik1262 is called technical committee 39 or tc39 for short.
 tecma however decided to use the term ecmascript to talk about the official language the reason for this is because Oracle who acquired Microsystems owns the trademark for the term JavaScript.
 so ecmascript refers to the standard language whereas JavaScript is what we use in practice and builds on top of ecmascript.
 over the years we've had many versions of ecmascript released as you can see.
 es2015 also known as es6 is the version that provides what we call Modern JavaScript features and has become a prerequisite for developing with JavaScript.
 now here's the funny bit although ecmascript and JavaScript are technically not the same the two words are often used interchangeably.
 and to be honest for the purpose of the series it does not make a huge difference.
 whenever you see the word ecmascript you can think of it as JavaScript I do not want you to get sidetracked trying to research on what is ecmascript and how is it different from JavaScript.
 this video has hopefully made that clear.
 to summarize like my 262 is the language specification ecmascript is a language that implements ekma 262.
 JavaScript is basically ecmascript at its core but Builds on top of that.
 for the rest of the series it is safe to treat ecmascript as JavaScript which is the language we all are familiar with.
 if this first concept is clear join me in the next video where we will learn about Chrome's V8 engine"
