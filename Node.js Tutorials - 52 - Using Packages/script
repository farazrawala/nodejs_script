"in the previous video we learned how to install the uppercase package into our project from the npm registry.
in this video let's learn how to use that package in our code.
now what you should know is that any package we install is basically a module in node.js.
earlier in the series we have seen how to import a local module and a built-in module.
for a local module const local module is equal to require dot slash path to module for a built-in module we've used const FS is equal to require node colon FS.
now let's see how to import a third-party module which is nothing but the package code we have installed in the previous video.
now the package name is upper hyphen case.
if we head back to npmgs we can see a section on usage this however uses the es module syntax.
let's convert it into common Js.
back in vs code const uppercase is equal to require uppercase.
this however Imports everything that is exported from the package we just need the uppercase function so dot uppercase.
now within the Contour log statement we can invoke upper case passing in the string.
we can now call the grid function passing in a name vishwas and the terminal if we run node index we should see the expected output in upper case hello vishwas welcome to code evolution.
so we have successfully used a package installed from the npm registry in our own project.
of course our requirement was a simple one to convert text to uppercase.
but you can imagine a more complex requirement such as a need to deep clone an object in JavaScript.
instead of you having to write the code and test that code you can rely on an npm package.
low Dash is a pretty popular Java Script utility Library.
it exposes various functionality thatyou can readily use in your project.
you can focus on the project requirement rather than building utility functions.
but I hope it is clear to you now as to how we can install and use packages from the npm registry.
alright in the next video Let's understand more about this dependencies field in package.json.
thank you for watching I'll see you in the next one"
